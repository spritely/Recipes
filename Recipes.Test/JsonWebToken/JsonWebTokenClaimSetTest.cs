// --------------------------------------------------------------------------------------------------------------------
// <copyright file="JsonWebTokenClaimSetTest.cs">
//     Copyright (c) 2016. All rights reserved. Licensed under the MIT license. See LICENSE file in
//     the project root for full license information.
// </copyright>
// <auto-generated>
// Sourced from NuGet package. Will be overwritten with package update except in Spritely.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Spritely.Recipes.Test
{
    using System;
    using NUnit.Framework;
    
    [TestFixture]
    public class JsonWebTokenClaimSetTest
    {
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);

        [Test]
        public void ToJavaScriptObject_sets_iss()
        {
            var claimSet = new JsonWebTokenClaimSet
            {
                Issuer = "My issuer"
            };

            dynamic jsObject = claimSet.ToJavaScriptObject();
            Assert.That(jsObject.iss, Is.EqualTo("My issuer"));
        }

        [Test]
        public void ToJavaScriptObject_sets_aud()
        {
            var claimSet = new JsonWebTokenClaimSet
            {
                Audience = new Uri("http://localhost")
            };

            dynamic jsObject = claimSet.ToJavaScriptObject();
            Assert.That(jsObject.aud, Is.EqualTo("http://localhost/"));
        }

        [Test]
        public void ToJavaScriptObject_sets_scope()
        {
            var claimSet = new JsonWebTokenClaimSet
            {
                Scopes =
                {
                    "scope1",
                    "scope2",
                    "scope3"
                }
            };

            dynamic jsObject = claimSet.ToJavaScriptObject();
            Assert.That(jsObject.scope, Is.EqualTo("scope1 scope2 scope3"));
        }

        [Test]
        public void ToJavaScriptObject_sets_iat()
        {
            var claimSet = new JsonWebTokenClaimSet();

            dynamic jsObject = claimSet.ToJavaScriptObject();
            var expectedSeconds = Convert.ToInt64(DateTime.UtcNow.Subtract(UnixEpoch).TotalSeconds);
            Assert.That(jsObject.iat, Is.InRange(expectedSeconds - 2, expectedSeconds + 2));
        }

        [Test]
        public void ToJavaScriptObject_sets_exp_for_1_hour_by_default()
        {
            var claimSet = new JsonWebTokenClaimSet();

            dynamic jsObject = claimSet.ToJavaScriptObject();
            var expectedSeconds = Convert.ToInt64(DateTime.UtcNow.Add(TimeSpan.FromHours(1)).Subtract(UnixEpoch).TotalSeconds);
            Assert.That(jsObject.exp, Is.InRange(expectedSeconds - 2, expectedSeconds + 2));
        }

        [Test]
        public void ToJavaScriptObject_sets_exp_for_specified_duration()
        {
            var claimSet = new JsonWebTokenClaimSet
            {
                Duration = TimeSpan.FromHours(6)
            };

            dynamic jsObject = claimSet.ToJavaScriptObject();
            var expectedSeconds = Convert.ToInt64(DateTime.UtcNow.Add(TimeSpan.FromHours(6)).Subtract(UnixEpoch).TotalSeconds);
            Assert.That(jsObject.exp, Is.InRange(expectedSeconds - 2, expectedSeconds + 2));
        }
    }
}
