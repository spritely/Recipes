// --------------------------------------------------------------------------------------------------------------------
// <copyright file="JsonWebTokenClaimSet.cs">
//     Copyright (c) 2016. All rights reserved. Licensed under the MIT license. See LICENSE file in
//     the project root for full license information.
// </copyright>
// <auto-generated>
// Sourced from NuGet package. Will be overwritten with package update except in Spritely.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Spritely.Recipes
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The claim set for a JSON web token.
    /// </summary>
#if !SpritelyRecipesProject
    [System.Diagnostics.DebuggerStepThrough]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("Spritely.Recipes", "See package version number")]
#pragma warning disable 0436
#endif
    internal class JsonWebTokenClaimSet
    {
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);

        /// <summary>
        /// Initializes a new instance of the <see cref="JsonWebTokenClaimSet"/> class.
        /// </summary>
        public JsonWebTokenClaimSet()
        {
            Duration = TimeSpan.FromMinutes(60);
            Scopes = new List<string>();
        }

        /// <summary>
        /// Gets or sets the issuer.
        /// </summary>
        /// <value>The issuer.</value>
        public string Issuer { get; set; }

        /// <summary>
        /// Gets or sets the audience.
        /// </summary>
        /// <value>The audience.</value>
        public Uri Audience { get; set; }

        /// <summary>
        /// Gets or sets the duration.
        /// </summary>
        /// <value>The duration.</value>
        public TimeSpan Duration { get; set; }

        /// <summary>
        /// Gets the scopes.
        /// </summary>
        /// <value>The scopes.</value>
        public ICollection<string> Scopes { get; private set; }

        internal object ToJavaScriptObject()
        {
            var now = DateTime.UtcNow;

            var claimSet = new
            {
                iss = Issuer,
                scope = string.Join(" ", Scopes),
                aud = (Audience == null) ? null : Audience.ToString(),
                iat = (Convert.ToInt64(now.Subtract(UnixEpoch).TotalSeconds)),
                exp = (Convert.ToInt64(now.Add(Duration).Subtract(UnixEpoch).TotalSeconds))
            };

            return claimSet;
        }
    }
#if !SpritelyRecipesProject
#pragma warning restore 0436
#endif
}
